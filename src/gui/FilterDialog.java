/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author stephan_wink
 */
public class FilterDialog extends javax.swing.JDialog {

    /**
     * Creates new form FilterDialog
     */
    public FilterDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enabled_jcb = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        filter_jta = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        save_jb = new javax.swing.JButton();
        load_jb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        enabled_jcb.setText("enabled");
        enabled_jcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enabled_jcbActionPerformed(evt);
            }
        });

        filter_jta.setColumns(20);
        filter_jta.setRows(5);
        filter_jta.setToolTipText("Enter all filter strings with \";\" separated.");
        jScrollPane1.setViewportView(filter_jta);

        jLabel1.setText("Filter:");

        save_jb.setText("save...");
        save_jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_jbActionPerformed(evt);
            }
        });

        load_jb.setText("load...");
        load_jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load_jbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enabled_jcb, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(load_jb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(save_jb)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save_jb)
                    .addComponent(load_jb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enabled_jcb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enabled_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enabled_jcbActionPerformed
        // ready for filter, build filter list
        if(true == enabled_jcb.isSelected())
        {
            BuildFilter();
        }
    }//GEN-LAST:event_enabled_jcbActionPerformed

    private void save_jbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_jbActionPerformed
        String saveString = filter_jta.getText();
        PrintWriter printer;
        
        try {
            printer = new PrintWriter(new FileWriter(FILTER_FILE_NAME), false);
            printer.print(saveString);
            printer.flush();
            printer.close();
        } catch (IOException ex) {
            Logger.getLogger(FilterDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_save_jbActionPerformed

    private void load_jbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_jbActionPerformed
        String filter = new String();
        File file = new File(FILTER_FILE_NAME);
        if(file.isFile())
        {
            // file is existing, read filter
            BufferedReader in = null; 
            try 
            { 
                in = new BufferedReader(new FileReader(file)); 
                String line = null; 
                while ((line = in.readLine()) != null) { 
                    System.out.println("Gelesene Zeile: " + line);
                    filter += line;
            } 
        } catch (IOException e) 
        { 
        } finally 
        { 
            if (in != null) 
                try 
                {
                    filter_jta.setText(filter);
                    in.close(); 
                } catch (IOException e) { 
                } 
        }
        }
        else
        {
            // no configuration existing
            filterList.clear();
        }
        
    }//GEN-LAST:event_load_jbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FilterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FilterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FilterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FilterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FilterDialog dialog = new FilterDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public boolean CheckFilter(String text)
    {
        boolean success_bol = true;
        if(true == enabled_jcb.isSelected())
        {
            success_bol = false;
            for(int idx = 0; idx < filterList.size(); idx++)
            {
                if(-1 != text.indexOf(filterList.get(idx)))
                {
                    // element found
                    success_bol = true;
                    break;
                }
            }
        }
        else
        {
            success_bol = true;
        }
        
        return success_bol;
    }
    
    private void BuildFilter()
    {
        StringTokenizer tokens;
        
        tokens = new StringTokenizer(filter_jta.getText(), ";");
        filterList.clear();
        
        while(tokens.hasMoreElements())
        {
            filterList.add(tokens.nextToken());
        }
    }
    
    private List<String> filterList = new ArrayList<>();
    private String FILTER_FILE_NAME = "filter.cfg";

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox enabled_jcb;
    private javax.swing.JTextArea filter_jta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton load_jb;
    private javax.swing.JButton save_jb;
    // End of variables declaration//GEN-END:variables
}
